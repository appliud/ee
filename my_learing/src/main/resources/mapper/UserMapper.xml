<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper为映射的根节点-->
<!-- mapper为映射的根节点，namespace指定Dao接口的完整类名
mybatis会依据这个接口动态创建一个实现类去实现这个接口，
而这个实现类是一个Mapper对象-->
<mapper namespace="com.wrr.pojo.User">
    <!--id ="接口中的方法名"
　　parameterType="传入的参数类型"
　　resultType = "返回实体类对象，使用包.类名"-->
    <select id="getUserById" parameterType="Integer" resultType="com.wrr.pojo.User">
	 	select * from employee where id = #{id}
	</select>
    <insert id="addUser"  parameterType="com.wrr.pojo.User">
        insert into employee(id,name,age,position) values(#{id},#{name},#{age},#{position})
    </insert>
    <select id="getUserAll" resultType="com.wrr.pojo.User">
        select * from employee
    </select>

    <update id="updateUser" parameterType="com.wrr.pojo.User">
        update employee set name = #{name},age = #{age},position = #{position} where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from employee where id = #{id}
    </delete>

    <select id="getUserByName" parameterType="String" resultType="com.wrr.pojo.User">
        select * from employee where name = #{name}
    </select>

    <select id="getMaxId" resultType="java.lang.Integer">
        select max(id) from employee
    </select>
</mapper>
